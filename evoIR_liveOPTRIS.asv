clear all; close all; clc

%% initializing variables
% initialize the interface as a global variable
global IRInterface;
IRInterface = EvoIRMatlabInterface; 

% initialize the viewer
IRViewer = EvoIRViewer; 
global viewer_is_running; 

% check for connection error, if not connected - return (exit)
if ~IRInterface.connect()
    return
end

% set temp range (uncomment next line for usage)
IRInterface.set_temperature_range(15, 50);

%% Webcam

cam = webcam(1);
preview(cam);

%% frames extraction loop
% main loop
% vidS(288,382,100) = zeros;
N = 50;
idx = 1;
run = 1;
tStart = tic;
tElapsed = zeros(1,1);
buffer_THM = zeros(288,382,1);

while(idx < 100)
    % grab image data
    % RGB = IRInterface.get_palette();        % grab palette image
    THM = IRInterface.get_thermal();        % grab thermal image

    imagesc(THM); % draw RGB image
    drawnow();   
    
    frame = (single(THM - 1000) ./ 10);
    
    buffer_VIS(:,:,idx) = snapshot(cam);
    buffer_THM(:,:,idx) = frame;
    
    disp(idx)
    tElapsed(idx,1) = toc(tStart);
    idx = idx + 1;
end
%% save data and close figure

%AA = buffer(:,:,180);
save('buffer','-v7.3','buffer','tElapsed');
close figure 1;

%% Load and playback

load('buffer'); % ,'-mat'
len = size(buffer);
i = 1;
while(i <= len(1,3))
    frame = buffer(:,:,i);
    imagesc(frame); % draw RGB image
    drawnow(); 
    i = i + 1;
end


%% Terminate
IRInterface.terminate();                    % disconnect from camera
close all; 
closePreview(cam)
%delete(vid);
